<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (SEA Vaccination Rate)' inline='true' name='federated.0v4xt6s0gsu2zy1b56jnc0ucug08' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SEA Vaccination Rate' name='excel-direct.09o3wpk07lj312136c0mn07mzvml'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/DATA ANALYST/Portfolio/[DONE] Covid Throughout Indonesia/SEA Vaccination Rate.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.09o3wpk07lj312136c0mn07mzvml' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D10:no:A1:D10:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='total_vaccination' ordinal='2' />
            <column datatype='real' name='vaccination_rate' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccination</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccination]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccination</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccination_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[vaccination_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>vaccination_rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10:no:A1:D10:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Vaccination' datatype='integer' name='[total_vaccination]' role='measure' type='quantitative' />
      <column caption='Vaccination Rate' datatype='real' name='[vaccination_rate]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.426941' measure-ordering='alphabetic' measure-percentage='0.573059' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Vaccination Effect)' inline='true' name='federated.0id3rvu09oium31g0yfct07nuuyw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Vaccination Effect' name='excel-direct.0q59oee1snb0l41d1fhx21ig50t6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='F:/DATA ANALYST/Portfolio/[DONE] Covid Throughout Indonesia/Vaccination Effect.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0q59oee1snb0l41d1fhx21ig50t6' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='real' name='Cases_Rates' ordinal='2' />
            <column datatype='real' name='Vaccination_Rates' ordinal='3' />
            <column datatype='real' name='Death_Rates' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases_Rates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cases_Rates]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Cases_Rates</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vaccination_Rates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vaccination_Rates]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Vaccination_Rates</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_Rates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_Rates]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Death_Rates</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cases Rates' datatype='real' name='[Cases_Rates]' role='measure' type='quantitative' />
      <column caption='Death Rates' datatype='real' name='[Death_Rates]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Vaccination Rates' datatype='real' name='[Vaccination_Rates]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[Cases_Rates]' derivation='Avg' name='[avg:Cases_Rates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Death_Rates]' derivation='Avg' name='[avg:Death_Rates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vaccination_Rates]' derivation='Avg' name='[avg:Vaccination_Rates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cases_Rates]' derivation='Sum' name='[sum:Cases_Rates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Death_Rates]' derivation='Sum' name='[sum:Death_Rates:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Vaccination_Rates]' derivation='Sum' name='[sum:Vaccination_Rates:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.452055' measure-ordering='alphabetic' measure-percentage='0.547945' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Indonesia&quot;</bucket>
                <bucket>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Indonesia&quot;</bucket>
                <bucket>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[sum:Death_Rates:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[sum:Vaccination_Rates:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[sum:Cases_Rates:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0id3rvu09oium31g0yfct07nuuyw'>
      <datasources>
        <datasource caption='Sheet1 (Vaccination Effect)' name='federated.0id3rvu09oium31g0yfct07nuuyw' />
      </datasources>
      <datasource-dependencies datasource='federated.0id3rvu09oium31g0yfct07nuuyw'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0v4xt6s0gsu2zy1b56jnc0ucug08'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0v4xt6s0gsu2zy1b56jnc0ucug08].[none:location:nk]'>
        <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0id3rvu09oium31g0yfct07nuuyw].[none:location:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Average Cases vs Vaccination' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Average Cases vs Vaccination' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Indonesia Covid Effects' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Indonesia Covid Effects' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Cases vs Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Vaccination Effect)' name='federated.0id3rvu09oium31g0yfct07nuuyw' />
            <datasource caption='Sheet1 (SEA Vaccination Rate)' name='federated.0v4xt6s0gsu2zy1b56jnc0ucug08' />
          </datasources>
          <datasource-dependencies datasource='federated.0id3rvu09oium31g0yfct07nuuyw'>
            <column caption='Cases Rates' datatype='real' name='[Cases_Rates]' role='measure' type='quantitative' />
            <column caption='Death Rates' datatype='real' name='[Death_Rates]' role='measure' type='quantitative' />
            <column-instance column='[Cases_Rates]' derivation='Avg' name='[avg:Cases_Rates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death_Rates]' derivation='Avg' name='[avg:Death_Rates:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0v4xt6s0gsu2zy1b56jnc0ucug08'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0id3rvu09oium31g0yfct07nuuyw].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Indonesia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v4xt6s0gsu2zy1b56jnc0ucug08].[none:location:nk]</column>
            <column>[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]</column>
            <column>[federated.0id3rvu09oium31g0yfct07nuuyw].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
            <format attr='height' field='[federated.0id3rvu09oium31g0yfct07nuuyw].[none:location:nk]' value='10' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk] + [federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk])</rows>
        <cols>([federated.0id3rvu09oium31g0yfct07nuuyw].[none:location:nk] * [federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk])</cols>
      </table>
      <simple-id uuid='{D8554957-9353-4419-B5DF-D3CC10C8B373}' />
    </worksheet>
    <worksheet name='Average Cases vs Vaccination'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Vaccination Effect)' name='federated.0id3rvu09oium31g0yfct07nuuyw' />
            <datasource caption='Sheet1 (SEA Vaccination Rate)' name='federated.0v4xt6s0gsu2zy1b56jnc0ucug08' />
          </datasources>
          <datasource-dependencies datasource='federated.0id3rvu09oium31g0yfct07nuuyw'>
            <column caption='Cases Rates' datatype='real' name='[Cases_Rates]' role='measure' type='quantitative' />
            <column caption='Vaccination Rates' datatype='real' name='[Vaccination_Rates]' role='measure' type='quantitative' />
            <column-instance column='[Cases_Rates]' derivation='Avg' name='[avg:Cases_Rates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vaccination_Rates]' derivation='Avg' name='[avg:Vaccination_Rates:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0v4xt6s0gsu2zy1b56jnc0ucug08'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0id3rvu09oium31g0yfct07nuuyw].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Indonesia&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v4xt6s0gsu2zy1b56jnc0ucug08].[none:location:nk]</column>
            <column>[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]</column>
            <column>[federated.0id3rvu09oium31g0yfct07nuuyw].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' value='160' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk] + [federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk])</rows>
        <cols>[federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#787878'>Month of Date</run>
              <run fontcolor='#787878'>: </run>
              <run bold='true'>&lt;[federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#787878'>Avg. Cases Rates</run>
              <run fontcolor='#787878'>: </run>
              <run bold='true'>&lt;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk]</field>
                      <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk]</field>
                      <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.70891222486952488</value>
                    <value>#2021-06-01 00:00:00#</value>
                    <value>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Cases_Rates:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-75' y='-60' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{725D8D94-60FF-403F-A927-6121002A76F6}' />
    </worksheet>
    <worksheet name='Average Death vs Vaccination'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Vaccination Effect)' name='federated.0id3rvu09oium31g0yfct07nuuyw' />
            <datasource caption='Sheet1 (SEA Vaccination Rate)' name='federated.0v4xt6s0gsu2zy1b56jnc0ucug08' />
          </datasources>
          <datasource-dependencies datasource='federated.0id3rvu09oium31g0yfct07nuuyw'>
            <column caption='Death Rates' datatype='real' name='[Death_Rates]' role='measure' type='quantitative' />
            <column caption='Vaccination Rates' datatype='real' name='[Vaccination_Rates]' role='measure' type='quantitative' />
            <column-instance column='[Death_Rates]' derivation='Avg' name='[avg:Death_Rates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vaccination_Rates]' derivation='Avg' name='[avg:Vaccination_Rates:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0v4xt6s0gsu2zy1b56jnc0ucug08'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0v4xt6s0gsu2zy1b56jnc0ucug08].[none:location:nk]</column>
            <column>[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' value='160' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk] + [federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Vaccination_Rates:qk])</rows>
        <cols>[federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true' fontcolor='#787878'>Month of Date</run>
              <run fontcolor='#787878'>: </run>
              <run bold='true'>&lt;[federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk]&gt;</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#787878'>Avg. Death Rates</run>
              <run fontcolor='#787878'>: </run>
              <run bold='true'>&lt;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]</field>
                      <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[tmn:date:qk]</field>
                      <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1.1653340620227317</value>
                    <value>#2021-07-01 00:00:00#</value>
                    <value>&quot;[federated.0id3rvu09oium31g0yfct07nuuyw].[avg:Death_Rates:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-87' y='-83' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3D672C4D-AB1A-442E-84EA-75984AF04AA6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Indonesia Covid Effects'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='12' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='10' type='layout-basic' w='98400' x='800' y='1000'>
                <zone h='49000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='49000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='44312' id='3' name='Average Cases vs Deaths' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4688' id='8' name='Average Cases vs Deaths' pane-specification-id='1' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' type='color' w='98400' x='800' y='45312'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='46000' id='9' name='Average Cases vs Vaccination' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='3000' id='13' leg-item-layout='horz' name='Average Cases vs Vaccination' pane-specification-id='2' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' show-title='false' type='color' w='49200' x='800' y='96000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46000' id='14' name='Average Death vs Vaccination' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='160' h='3000' id='15' is-fixed='true' param='vert' type='layout-flow' w='49200' x='50000' y='96000'>
                  <zone h='3000' id='17' leg-item-layout='horz' name='Average Death vs Vaccination' pane-specification-id='1' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' show-title='false' type='color' w='49200' x='50000' y='96000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='44312' id='3' is-fixed='true' name='Average Cases vs Deaths' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4688' id='8' name='Average Cases vs Deaths' pane-specification-id='1' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' type='color' w='98400' x='800' y='45312'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46000' id='9' is-fixed='true' name='Average Cases vs Vaccination' w='49200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='13' leg-item-layout='horz' name='Average Cases vs Vaccination' pane-specification-id='2' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' show-title='false' type='color' w='49200' x='800' y='96000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46000' id='14' is-fixed='true' name='Average Death vs Vaccination' w='49200' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='17' leg-item-layout='horz' name='Average Death vs Vaccination' pane-specification-id='1' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' show-title='false' type='color' w='49200' x='50000' y='96000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5001E12A-0DA8-4C1D-8901-A18B2C72B2A3}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='Average Cases vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='1' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[none:location:nk]</field>
            <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F14773FC-95D1-4B96-A367-2E9B26B86EFA}' />
    </window>
    <window class='worksheet' name='Average Cases vs Vaccination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBB6EE99-CB83-4CAF-A01E-54182339546F}' />
    </window>
    <window class='worksheet' name='Average Death vs Vaccination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0id3rvu09oium31g0yfct07nuuyw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9FDB687-DC58-4459-B538-101BD492939D}' />
    </window>
    <window class='dashboard' maximized='true' name='Indonesia Covid Effects'>
      <viewpoints>
        <viewpoint name='Average Cases vs Deaths'>
          <zoom type='entire-view' />
          <highlight field='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Average Cases vs Vaccination'>
          <zoom type='entire-view' />
          <highlight field='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Average Death vs Vaccination'>
          <zoom type='entire-view' />
          <highlight field='[federated.0id3rvu09oium31g0yfct07nuuyw].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{80DEE1C8-9CBE-4D3C-8986-1D271C66858A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Cases vs Deaths' width='192'>
      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
      HyF7NIc2eotqAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Cases vs Vaccination' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average Death vs Vaccination' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indonesia Covid Effects' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Indonesia Through COVID 19' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Cases Rate vs Death Rate' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='52' name='Total Covid Cases in The World' width='192'>
      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
      HZ/bAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccination Rate in SEA' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
